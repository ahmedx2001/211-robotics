void Drive (int Distance) {
	long error = 99999;
	float KP = .35;
	float KD = 2.1;
	long Velocity = 0;
	long MotorSpeed = 127;
	long CurrentDistance;
	long PreviousDistance = 0;
	SensorValue(LeftEncoder) = 0;
	SensorValue(RightEncoder) = 0;
	int cycle = 0;

	while (cycle < 20) {
		CurrentDistance = ((SensorValue(LeftEncoder)-SensorValue(RightEncoder))/2);

		// P = calculate the error
		error = Distance - CurrentDistance;

		// D = Calculate the speed
		Velocity = CurrentDistance - PreviousDistance;

		// I = how long we have been away
		if (abs(error) < 5){
			// If we are close add to cycle
			cycle = cycle + 1;
		}
		else if (abs(Velocity) < 5){
			// If we are going slow
			cycle = cycle + 1;
		}

		// Calculates how fast to move the robot
		MotorSpeed = (error * KP) - (Velocity * KD);
		BaseSpeed((MotorSpeed-4), MotorSpeed);
		writeDebugStreamLine("Cycle: %d", cycle);

		// Save the distance for the next cycle
		PreviousDistance = CurrentDistance;

		wait1Msec(25);
	}
	BaseSpeed(0,0);
}
